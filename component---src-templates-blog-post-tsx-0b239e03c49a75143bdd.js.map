{"version":3,"sources":["webpack:///./src/components/footer.tsx","webpack:///./src/components/seo.tsx","webpack:///./src/components/navbar.tsx","webpack:///./src/templates/blog-post.tsx","webpack:///./src/components/brand.tsx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"names":["Footer","href","SEO","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","NavBar","id","to","brand_title","style","flex","className","node","data","markdownRemark","color","dangerouslySetInnerHTML","__html","frontmatter","subtitle","date","toc","fontSize","fields","Date","toLocaleDateString","headings","length","position","top","height","left","filter","heading","depth","map","value","headerID","toLowerCase","split","join","replace","key","onClick","jumpLen","document","getElementById","getBoundingClientRect","window","scrollBy","behavior","excerpt","width","html","brand_subtitle","_objectDestructuringEmpty","obj","TypeError"],"mappings":"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","file":"component---src-templates-blog-post-tsx-0b239e03c49a75143bdd.js","sourcesContent":["import * as React from \"react\"\n\nimport \"./footer.component.sass\"\n\nconst Footer = ({}) => (\n    <footer>\n        <p>\n            Designed by <a href={\"https://github.com/SharzyL\"}>Sharzy</a>.\n            Powered by <a href={\"https://www.gatsbyjs.com/\"}>Gatsby</a>.\n            Hosted on <a href={\"https://github.io\"}>Github Pages</a>.\n        </p>\n        <p>\n            Content on this site is licensed under <a href={\"https://creativecommons.org/licenses/by/4.0/\"}>CC BY 4.0</a> unless specified.\n        </p>\n        <p>\n            Subscribe the blog via <a href={\"/feed.xml\"}>RSS</a>.\n        </p>\n    </footer>\n)\n\nexport default Footer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import * as React from \"react\"\nimport { Link } from \"gatsby\";\n\nimport \"./navbar.component.sass\"\nimport { brand_title } from \"./brand\";\n\nconst NavBar = ({}) => (\n    <nav id={\"nav-bar\"}>\n        <Link to={\"/\"} id={\"nav-home\"}>{brand_title}</Link>\n        <span style={{flex: 1}}/>\n        <Link to={\"/blog\"} className={\"nav-item live-link\"}>Blog</Link>\n        <Link to={\"/about\"} className={\"nav-item live-link\"}>About</Link>\n    </nav>\n)\n\nexport default NavBar\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport \"katex/dist/katex.min.css\"\nimport \"../style/blog-post.sass\"\n\nimport NavBar from \"../components/navbar\";\nimport Footer from \"../components/footer\";\nimport SEO from \"../components/seo\"\n\nconst makeToc = (headings) => {\n    const makeOneToc = ({depth, value}) => {\n        const headerID = value.toLowerCase()\n            .split(' ').join('-')\n            .replace(/[!?.,]/g, '')\n        const jumpToToc = () => {\n            const jumpLen = document.getElementById(headerID).getBoundingClientRect().top\n            window.scrollBy({\n                top: jumpLen - 15,\n                left: 0,\n                behavior: 'smooth'\n            })\n        }\n        return <div\n            key={headerID}\n            className={`post-toc-item post-toc-item-h${depth}`}\n            onClick={jumpToToc}>{value}</div>\n    }\n    return headings\n        .filter((heading) => heading.depth <= 4)\n        .map(makeOneToc)\n}\n\nexport default ({ data }) => {\n    const node = data.markdownRemark\n    const title = <h1 id={\"blog-post-title\"} className={\"h-centering inner-block\"}\n                      style={{\n                          color: \"var(--color-brand)\"\n                      }}\n                      dangerouslySetInnerHTML={{ __html: node.frontmatter.title}}/>\n    let subtitle = <></>\n    let date = <></>\n    let toc = <></>\n\n    if (node.frontmatter.subtitle) {\n        subtitle = <h2 id={\"blog-post-subtitle\"} className={\"h-centering inner-block\"}\n                       style={{\n                           color: \"var(--color-base)\",\n                           fontSize: \"var(--fontsize-h3)\"\n                       }}\n                       dangerouslySetInnerHTML={{__html: node.frontmatter.subtitle}}/>\n    }\n    if (node.fields.date) {\n        date = (\n            <p id={\"blog-post-info\"}\n               style={{\n                   color: \"var(--color-base)\"\n               }}\n               className={\"h-centering inner-block\"}\n            >\n                Posted on <span id={\"blog-post-date\"} style={{color: \"var(--color-brand-dark\"}}>\n                    {(new Date(node.fields.date)).toLocaleDateString()}\n                </span>\n            </p>\n        )\n    }\n    if (node.headings.length) {\n        toc = (\n            <div id={\"blog-post-toc-container\"}\n                 style={{\n                     position: \"absolute\",\n                     top: 0,\n                     height: \"100%\",\n                     left: \"calc((100vw + var(--metric-stretchout-width)) / 2 + var(--metric-unit-spacing))\",\n                 }}>\n                <div id={\"blog-post-toc\"}\n                     style={{\n                         top: \"var(--metric-unit-spacing)\",\n                         position: \"sticky\",\n                     }}>\n                    <p style={{\n                        fontSize: \"var(--fontsize-h6)\"\n                    }}>Contents</p>\n                    {makeToc(node.headings)}\n                </div>\n            </div>\n        )\n    }\n\n    // When articles with alternative language is added, lang should be changed\n    return (\n        <>\n            <SEO title={node.frontmatter.title} description={node.excerpt}/>\n            <NavBar/>\n            <article id={\"blog-post\"} className={\"para-block\"} lang={\"zh\"}\n                     style={{\n                         color: \"var(--color-base)\",\n                         position: \"relative\",\n                         width: \"100%\"\n             }}>\n                {title}\n                {subtitle}\n                {date}\n                <div id={\"blog-post-main\"} style={{position: \"relative\"}}>\n                    {toc}\n                    <div id={\"blog-post-content\"} className={\"para-block\"}\n                         dangerouslySetInnerHTML={{ __html: node.html }} />\n                </div>\n            </article>\n            <Footer/>\n        </>\n    )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        subtitle\n      }\n      fields {\n        date\n      }\n      headings {\n        depth\n        value\n      }\n      excerpt(truncate:true)\n    }\n  }\n`","import * as React from \"react\";\n\nconst brand_title = (\n    <>\n        <span className={\"brand\"}>Sh</span><span className={\"alternative\"}>ar</span><span className={\"brand\"}>z</span><span className={\"alternative\"}>y</span>\n    </>\n)\n\nconst brand_subtitle = (\n   <>\n       21<sup>st</sup> century schizoid man\n   </>\n)\n\nexport { brand_title, brand_subtitle }","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}"],"sourceRoot":""}